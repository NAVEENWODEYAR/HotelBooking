package com.hotelbookings.service;

import java.util.Collections;
import java.util.List;

import org.springframework.security.crypto.password.PasswordEncoder;

import com.hotelbookings.model.Role;
import com.hotelbookings.model.User;
import com.hotelbookings.repository.RoleRepository;
import com.hotelbookings.repository.UserRepository;

import lombok.RequiredArgsConstructor;


@RequiredArgsConstructor
public class UserService implements IUserService{
	
	private final UserRepository userRepository;
	private final PasswordEncoder passwordEncoder;
	private final RoleRepository roleRepository;

	@Override
	public User registerUser(User user) {
		if(userRepository.existByEmail(user.getEmail())) {
			
			throw new UserAlreadyExistsException(user.getEmail()+ "already Exists");
		}
		user.setPassword(passwordEncoder.encode(user.getPassword()));
		Role userRole = roleRepository.findByName("ROLE_USER").get();
		user.setRoles(Collections.singletonList(userRole));
		return userRepository.save(user);
	}

	@Override
	public List<User> getUsers() {
		return userRepository.findAll();
	}

	@Override
	public void deleteUser(String email) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public User getUser(String email) {
		// TODO Auto-generated method stub
		return null;
	}
	
	

}
