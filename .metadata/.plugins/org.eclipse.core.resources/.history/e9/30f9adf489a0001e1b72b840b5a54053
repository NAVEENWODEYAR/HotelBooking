package com.hotelbookings.security.jwt;

import java.util.Date;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.GrantedAuthority;

import com.hotelbookings.security.user.HotelUserDetails;

import io.jsonwebtoken.*;

public class JwtUtils {
	
	private static final Logger logger = LoggerFactory.getLogger(JwtUtils.class);
	
	@Value("${security.jwt.secret}")
	private String jwtSecret;
	
	@Value("${security.jwt.jwtExpirationTime}")
	private int jwtExpirationTime;
	
	
	public String generateJwtTokenForUser(Authentication authentication) {
		
		HotelUserDetails userPrincipal = (HotelUserDetails) authentication.getPrincipal();
		
		List<String> roles = userPrincipal.getAuthorities()
				.stream().map(GrantedAuthority :: getAuthority).toList();
		
		return Jwts.builder()
				.setSubject(userPrincipal.getUsername())
				.claim("roles",roles)
				.setIssuedAt(new Date())
				.setExpiration(new Date(new Date()).getTime()+jwtExpirationTime)
				.signWith(key(),SignatureAlgorithm.HS256).compact();
	}

}
